spring:
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 5MB
      max-file-size: 15MB
      max-request-size: 20MB
  application:
    name: learning_managment_system_dev
  jpa:
    hibernate:
      ddl-auto: update
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        format_sql: true
    show-sql: true
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    url: ${DB_URL}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/hamza
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
  mail:
    host: smtp.gmail.com
    port: ${PORT_SMTP}
    username: ${USERNAME}
    password: ${PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  kafka:
    consumer:
      group-id: keycloak-id
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      properties:
        spring.json.trusted.packages: '*'
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

cloud:
  aws:
    credentials:
      access-key:
      secret-key:
    region:
      static: us-east-1
    stack:
      auto: false

application:
  bucket:
    name: course.videos.lms

jwt:
  auth:
    converter:
      resource-id: lms-auth
      principle-attribute: preferred_username


keycloak:
  realm: hamza
  server-url: http://localhost:8081
  client-id: lms-auth
  admin:
    username: admin
    password: admin
hamza:
  address: hamza.cherkaoui1234@gmail.com

server:
  port: 8082



